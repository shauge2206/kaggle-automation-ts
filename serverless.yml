# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: stian
# "service" is the name of this project. This will also be added to your AWS resource names.
service: kaggle-automation-ts

provider:
  name: aws
  runtime: nodejs23.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:provider.stage}-kaggleDownload
        - arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:provider.stage}-dataCleansing
        - arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:provider.stage}-herokuDataInsert
  environment:
    S3_BUCKET: ${self:service}-kaggle-bucket-${self:provider.stage}
    BASE_UPLOAD_FILE_KEY: "kaggle"
    ORIGINAL_FILE_NAME: "imdb_top_1000.csv"
  

functions:
  kaggleDownload:
    handler: handler.kaggleDownload
    description: Downloads IMDB dataset from Kaggle and uploads it to S3.
    iamRoleStatements:
      - Effect: Allow
        Action:
          - ssm:GetParameter
          - ssm:DescribeParameters
        Resource:
          - arn:aws:ssm:${self:provider.region}:${aws:accountId}:parameter/kaggle/username
          - arn:aws:ssm:${self:provider.region}:${aws:accountId}:parameter/kaggle/key
      - Effect: Allow
        Action:
          - kms:Decrypt
        Resource:
          - arn:aws:kms:${self:provider.region}:${aws:accountId}:key/84ecd075-f001-4bb8-abb4-d9670bf40fca
      - Effect: Allow
        Action:
          - s3:PutObject
        Resource:
          - arn:aws:s3:::${self:service}-kaggle-bucket-${self:provider.stage}/*
